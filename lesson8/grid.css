div{
    font-size: x-large;
    text-align: center;
    padding:10px;
    border: 1px solid black;
    background-color: blueviolet;
    /* the way to center the content in the middle vertically */
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.container{
    display: grid;
    /* first 2 ways of grid-template-columns are the same*/
    grid-template-columns: 40% 40% 20%; /*default is 1 column*/
    grid-template-columns: 2fr 2fr 1fr; /*fr- is for relative sizes*/
    grid-template-columns: repeat(3,1fr); /*fr- is for relative sizes*/
    gap: 3px;
    /* the height for each row */
    grid-auto-rows: 100px;
    
}

div:nth-child(1),div:nth-child(2),div:nth-child(3){
    background-color: tomato;
}

/* General styling for the layout part */
/* by default the html and the body have a default margin and body */
html,body{
    height: 100%;
    margin:0;
    padding: 0;
}

/* , (comma) in CSS is X and also Y , asterisk is all elements */
.pageLayout{
    height: 50%;

}
.pageLayout, .pageLayout>*{
    border:1px solid gray;
    background-image: linear-gradient(blue,white);
    box-sizing: border-box;
    display: grid;
    /* we need to devide it in our mind virtually */
    grid-template-columns: repeat(6,1fr);
    grid-template-rows: 20% 60% 20%;
}
/* now we only need to say how many colums each element takes, span says how many columns to take */
header,footer{
    grid-column: span 6;
}
main{
    grid-column:span 4;
}